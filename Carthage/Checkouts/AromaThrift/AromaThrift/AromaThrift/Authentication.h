/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"
#import "TAsyncTransport.h"
#import "TProtocolFactory.h"
#import "TBaseClient.h"

#import "Aroma.h"

enum AromaAuthentication_TokenStatus {
  TokenStatus_ACTIVE = 1,
  TokenStatus_EXPIRED = 2
};

enum AromaAuthentication_TokenType {
  TokenType_APPLICATION = 1,
  TokenType_USER = 2
};

typedef Aroma_int AromaAuthentication_int;

typedef Aroma_long AromaAuthentication_long;

typedef Aroma_timestamp AromaAuthentication_timestamp;

typedef Aroma_uuid AromaAuthentication_uuid;

@interface AromaAuthentication_ApplicationToken : NSObject <TBase, NSCoding> {
  NSString * __tokenId;
  NSString * __organization;
  AromaAuthentication_timestamp __timeOfExpiration;
  AromaAuthentication_uuid __applicationId;
  NSString * __applicationName;
  int __status;

  BOOL __tokenId_isset;
  BOOL __organization_isset;
  BOOL __timeOfExpiration_isset;
  BOOL __applicationId_isset;
  BOOL __applicationName_isset;
  BOOL __status_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=tokenId, setter=setTokenId:) NSString * tokenId;
@property (nonatomic, retain, getter=organization, setter=setOrganization:) NSString * organization;
@property (nonatomic, getter=timeOfExpiration, setter=setTimeOfExpiration:) AromaAuthentication_timestamp timeOfExpiration;
@property (nonatomic, retain, getter=applicationId, setter=setApplicationId:) AromaAuthentication_uuid applicationId;
@property (nonatomic, retain, getter=applicationName, setter=setApplicationName:) NSString * applicationName;
@property (nonatomic, getter=status, setter=setStatus:) int status;
#endif

- (id) init;
- (id) initWithTokenId: (NSString *) tokenId organization: (NSString *) organization timeOfExpiration: (AromaAuthentication_timestamp) timeOfExpiration applicationId: (AromaAuthentication_uuid) applicationId applicationName: (NSString *) applicationName status: (int) status;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) tokenId;
- (void) setTokenId: (NSString *) tokenId;
#endif
- (BOOL) tokenIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) organization;
- (void) setOrganization: (NSString *) organization;
#endif
- (BOOL) organizationIsSet;

#if !__has_feature(objc_arc)
- (AromaAuthentication_timestamp) timeOfExpiration;
- (void) setTimeOfExpiration: (AromaAuthentication_timestamp) timeOfExpiration;
#endif
- (BOOL) timeOfExpirationIsSet;

#if !__has_feature(objc_arc)
- (AromaAuthentication_uuid) applicationId;
- (void) setApplicationId: (AromaAuthentication_uuid) applicationId;
#endif
- (BOOL) applicationIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) applicationName;
- (void) setApplicationName: (NSString *) applicationName;
#endif
- (BOOL) applicationNameIsSet;

#if !__has_feature(objc_arc)
- (int) status;
- (void) setStatus: (int) status;
#endif
- (BOOL) statusIsSet;

@end

@interface AromaAuthentication_UserToken : NSObject <TBase, NSCoding> {
  NSString * __tokenId;
  AromaAuthentication_timestamp __timeOfExpiration;
  NSString * __organization;
  BOOL __isOauthToken;
  NSString * __oauthProvider;
  AromaAuthentication_uuid __userId;
  int __status;

  BOOL __tokenId_isset;
  BOOL __timeOfExpiration_isset;
  BOOL __organization_isset;
  BOOL __isOauthToken_isset;
  BOOL __oauthProvider_isset;
  BOOL __userId_isset;
  BOOL __status_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=tokenId, setter=setTokenId:) NSString * tokenId;
@property (nonatomic, getter=timeOfExpiration, setter=setTimeOfExpiration:) AromaAuthentication_timestamp timeOfExpiration;
@property (nonatomic, retain, getter=organization, setter=setOrganization:) NSString * organization;
@property (nonatomic, getter=isOauthToken, setter=setIsOauthToken:) BOOL isOauthToken;
@property (nonatomic, retain, getter=oauthProvider, setter=setOauthProvider:) NSString * oauthProvider;
@property (nonatomic, retain, getter=userId, setter=setUserId:) AromaAuthentication_uuid userId;
@property (nonatomic, getter=status, setter=setStatus:) int status;
#endif

- (id) init;
- (id) initWithTokenId: (NSString *) tokenId timeOfExpiration: (AromaAuthentication_timestamp) timeOfExpiration organization: (NSString *) organization isOauthToken: (BOOL) isOauthToken oauthProvider: (NSString *) oauthProvider userId: (AromaAuthentication_uuid) userId status: (int) status;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) tokenId;
- (void) setTokenId: (NSString *) tokenId;
#endif
- (BOOL) tokenIdIsSet;

#if !__has_feature(objc_arc)
- (AromaAuthentication_timestamp) timeOfExpiration;
- (void) setTimeOfExpiration: (AromaAuthentication_timestamp) timeOfExpiration;
#endif
- (BOOL) timeOfExpirationIsSet;

#if !__has_feature(objc_arc)
- (NSString *) organization;
- (void) setOrganization: (NSString *) organization;
#endif
- (BOOL) organizationIsSet;

#if !__has_feature(objc_arc)
- (BOOL) isOauthToken;
- (void) setIsOauthToken: (BOOL) isOauthToken;
#endif
- (BOOL) isOauthTokenIsSet;

#if !__has_feature(objc_arc)
- (NSString *) oauthProvider;
- (void) setOauthProvider: (NSString *) oauthProvider;
#endif
- (BOOL) oauthProviderIsSet;

#if !__has_feature(objc_arc)
- (AromaAuthentication_uuid) userId;
- (void) setUserId: (AromaAuthentication_uuid) userId;
#endif
- (BOOL) userIdIsSet;

#if !__has_feature(objc_arc)
- (int) status;
- (void) setStatus: (int) status;
#endif
- (BOOL) statusIsSet;

@end

@interface AromaAuthentication_GithubToken : NSObject <TBase, NSCoding> {
  NSString * __username;
  NSString * __email;
  NSString * __oauthToken;

  BOOL __username_isset;
  BOOL __email_isset;
  BOOL __oauthToken_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=username, setter=setUsername:) NSString * username;
@property (nonatomic, retain, getter=email, setter=setEmail:) NSString * email;
@property (nonatomic, retain, getter=oauthToken, setter=setOauthToken:) NSString * oauthToken;
#endif

- (id) init;
- (id) initWithUsername: (NSString *) username email: (NSString *) email oauthToken: (NSString *) oauthToken;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) username;
- (void) setUsername: (NSString *) username;
#endif
- (BOOL) usernameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) email;
- (void) setEmail: (NSString *) email;
#endif
- (BOOL) emailIsSet;

#if !__has_feature(objc_arc)
- (NSString *) oauthToken;
- (void) setOauthToken: (NSString *) oauthToken;
#endif
- (BOOL) oauthTokenIsSet;

@end

@interface AromaAuthentication_Password : NSObject <TBase, NSCoding> {
  NSString * __encryptedPassword;

  BOOL __encryptedPassword_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=encryptedPassword, setter=setEncryptedPassword:) NSString * encryptedPassword;
#endif

- (id) init;
- (id) initWithEncryptedPassword: (NSString *) encryptedPassword;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) encryptedPassword;
- (void) setEncryptedPassword: (NSString *) encryptedPassword;
#endif
- (BOOL) encryptedPasswordIsSet;

@end

@interface AromaAuthentication_AromaAccount : NSObject <TBase, NSCoding> {
  NSString * __email;
  AromaAuthentication_Password * __password;
  NSString * __name;
  Aroma_Image * __profileImage;
  int __role;

  BOOL __email_isset;
  BOOL __password_isset;
  BOOL __name_isset;
  BOOL __profileImage_isset;
  BOOL __role_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=email, setter=setEmail:) NSString * email;
@property (nonatomic, retain, getter=password, setter=setPassword:) AromaAuthentication_Password * password;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, retain, getter=profileImage, setter=setProfileImage:) Aroma_Image * profileImage;
@property (nonatomic, getter=role, setter=setRole:) int role;
#endif

- (id) init;
- (id) initWithEmail: (NSString *) email password: (AromaAuthentication_Password *) password name: (NSString *) name profileImage: (Aroma_Image *) profileImage role: (int) role;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) email;
- (void) setEmail: (NSString *) email;
#endif
- (BOOL) emailIsSet;

#if !__has_feature(objc_arc)
- (AromaAuthentication_Password *) password;
- (void) setPassword: (AromaAuthentication_Password *) password;
#endif
- (BOOL) passwordIsSet;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

#if !__has_feature(objc_arc)
- (Aroma_Image *) profileImage;
- (void) setProfileImage: (Aroma_Image *) profileImage;
#endif
- (BOOL) profileImageIsSet;

#if !__has_feature(objc_arc)
- (int) role;
- (void) setRole: (int) role;
#endif
- (BOOL) roleIsSet;

@end

@interface AromaAuthentication_Credentials : NSObject <TBase, NSCoding> {
  AromaAuthentication_GithubToken * __githubToken;
  AromaAuthentication_Password * __aromaPassword;

  BOOL __githubToken_isset;
  BOOL __aromaPassword_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=githubToken, setter=setGithubToken:) AromaAuthentication_GithubToken * githubToken;
@property (nonatomic, retain, getter=aromaPassword, setter=setAromaPassword:) AromaAuthentication_Password * aromaPassword;
#endif

- (id) init;
- (id) initWithGithubToken: (AromaAuthentication_GithubToken *) githubToken aromaPassword: (AromaAuthentication_Password *) aromaPassword;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (AromaAuthentication_GithubToken *) githubToken;
- (void) setGithubToken: (AromaAuthentication_GithubToken *) githubToken;
#endif
- (BOOL) githubTokenIsSet;

#if !__has_feature(objc_arc)
- (AromaAuthentication_Password *) aromaPassword;
- (void) setAromaPassword: (AromaAuthentication_Password *) aromaPassword;
#endif
- (BOOL) aromaPasswordIsSet;

@end

@interface AromaAuthentication_AuthenticationToken : NSObject <TBase, NSCoding> {
  NSString * __tokenId;
  AromaAuthentication_uuid __ownerId;
  AromaAuthentication_timestamp __timeOfCreation;
  AromaAuthentication_timestamp __timeOfExpiration;
  int __tokenType;
  AromaAuthentication_uuid __organizationId;
  NSString * __ownerName;
  NSString * __organizationName;
  int __status;

  BOOL __tokenId_isset;
  BOOL __ownerId_isset;
  BOOL __timeOfCreation_isset;
  BOOL __timeOfExpiration_isset;
  BOOL __tokenType_isset;
  BOOL __organizationId_isset;
  BOOL __ownerName_isset;
  BOOL __organizationName_isset;
  BOOL __status_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=tokenId, setter=setTokenId:) NSString * tokenId;
@property (nonatomic, retain, getter=ownerId, setter=setOwnerId:) AromaAuthentication_uuid ownerId;
@property (nonatomic, getter=timeOfCreation, setter=setTimeOfCreation:) AromaAuthentication_timestamp timeOfCreation;
@property (nonatomic, getter=timeOfExpiration, setter=setTimeOfExpiration:) AromaAuthentication_timestamp timeOfExpiration;
@property (nonatomic, getter=tokenType, setter=setTokenType:) int tokenType;
@property (nonatomic, retain, getter=organizationId, setter=setOrganizationId:) AromaAuthentication_uuid organizationId;
@property (nonatomic, retain, getter=ownerName, setter=setOwnerName:) NSString * ownerName;
@property (nonatomic, retain, getter=organizationName, setter=setOrganizationName:) NSString * organizationName;
@property (nonatomic, getter=status, setter=setStatus:) int status;
#endif

- (id) init;
- (id) initWithTokenId: (NSString *) tokenId ownerId: (AromaAuthentication_uuid) ownerId timeOfCreation: (AromaAuthentication_timestamp) timeOfCreation timeOfExpiration: (AromaAuthentication_timestamp) timeOfExpiration tokenType: (int) tokenType organizationId: (AromaAuthentication_uuid) organizationId ownerName: (NSString *) ownerName organizationName: (NSString *) organizationName status: (int) status;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) tokenId;
- (void) setTokenId: (NSString *) tokenId;
#endif
- (BOOL) tokenIdIsSet;

#if !__has_feature(objc_arc)
- (AromaAuthentication_uuid) ownerId;
- (void) setOwnerId: (AromaAuthentication_uuid) ownerId;
#endif
- (BOOL) ownerIdIsSet;

#if !__has_feature(objc_arc)
- (AromaAuthentication_timestamp) timeOfCreation;
- (void) setTimeOfCreation: (AromaAuthentication_timestamp) timeOfCreation;
#endif
- (BOOL) timeOfCreationIsSet;

#if !__has_feature(objc_arc)
- (AromaAuthentication_timestamp) timeOfExpiration;
- (void) setTimeOfExpiration: (AromaAuthentication_timestamp) timeOfExpiration;
#endif
- (BOOL) timeOfExpirationIsSet;

#if !__has_feature(objc_arc)
- (int) tokenType;
- (void) setTokenType: (int) tokenType;
#endif
- (BOOL) tokenTypeIsSet;

#if !__has_feature(objc_arc)
- (AromaAuthentication_uuid) organizationId;
- (void) setOrganizationId: (AromaAuthentication_uuid) organizationId;
#endif
- (BOOL) organizationIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) ownerName;
- (void) setOwnerName: (NSString *) ownerName;
#endif
- (BOOL) ownerNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) organizationName;
- (void) setOrganizationName: (NSString *) organizationName;
#endif
- (BOOL) organizationNameIsSet;

#if !__has_feature(objc_arc)
- (int) status;
- (void) setStatus: (int) status;
#endif
- (BOOL) statusIsSet;

@end

@interface AromaAuthentication_AuthenticationConstants : NSObject {
}
+ (NSString *) OVER_THE_WIRE_PASSWORD_ENCRYPTION_KEY;
@end
