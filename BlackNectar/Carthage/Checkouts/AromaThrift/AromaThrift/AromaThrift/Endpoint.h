/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"
#import "TAsyncTransport.h"
#import "TProtocolFactory.h"
#import "TBaseClient.h"

#import "Authentication.h"
#import "Aroma.h"
#import "Exceptions.h"

typedef Aroma_int AromaEndpoint_int;

typedef Aroma_uuid AromaEndpoint_uuid;

typedef AromaException_OperationFailedException * AromaEndpoint_OperationFailedException;

@interface AromaEndpoint_TcpEndpoint : NSObject <TBase, NSCoding> {
  NSString * __hostname;
  AromaEndpoint_int __port;

  BOOL __hostname_isset;
  BOOL __port_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=hostname, setter=setHostname:) NSString * hostname;
@property (nonatomic, getter=port, setter=setPort:) AromaEndpoint_int port;
#endif

- (id) init;
- (id) initWithHostname: (NSString *) hostname port: (AromaEndpoint_int) port;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) hostname;
- (void) setHostname: (NSString *) hostname;
#endif
- (BOOL) hostnameIsSet;

#if !__has_feature(objc_arc)
- (AromaEndpoint_int) port;
- (void) setPort: (AromaEndpoint_int) port;
#endif
- (BOOL) portIsSet;

@end

@interface AromaEndpoint_HttpThriftEndpoint : NSObject <TBase, NSCoding> {
  NSString * __url;

  BOOL __url_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=url, setter=setUrl:) NSString * url;
#endif

- (id) init;
- (id) initWithUrl: (NSString *) url;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) url;
- (void) setUrl: (NSString *) url;
#endif
- (BOOL) urlIsSet;

@end

@interface AromaEndpoint_HttpRestEndpoint : NSObject <TBase, NSCoding> {
  NSString * __url;

  BOOL __url_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=url, setter=setUrl:) NSString * url;
#endif

- (id) init;
- (id) initWithUrl: (NSString *) url;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) url;
- (void) setUrl: (NSString *) url;
#endif
- (BOOL) urlIsSet;

@end

@interface AromaEndpoint_Endpoint : NSObject <TBase, NSCoding> {
  AromaEndpoint_TcpEndpoint * __tcp;
  AromaEndpoint_HttpThriftEndpoint * __httpThrift;
  AromaEndpoint_HttpRestEndpoint * __httpRest;

  BOOL __tcp_isset;
  BOOL __httpThrift_isset;
  BOOL __httpRest_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=tcp, setter=setTcp:) AromaEndpoint_TcpEndpoint * tcp;
@property (nonatomic, retain, getter=httpThrift, setter=setHttpThrift:) AromaEndpoint_HttpThriftEndpoint * httpThrift;
@property (nonatomic, retain, getter=httpRest, setter=setHttpRest:) AromaEndpoint_HttpRestEndpoint * httpRest;
#endif

- (id) init;
- (id) initWithTcp: (AromaEndpoint_TcpEndpoint *) tcp httpThrift: (AromaEndpoint_HttpThriftEndpoint *) httpThrift httpRest: (AromaEndpoint_HttpRestEndpoint *) httpRest;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (AromaEndpoint_TcpEndpoint *) tcp;
- (void) setTcp: (AromaEndpoint_TcpEndpoint *) tcp;
#endif
- (BOOL) tcpIsSet;

#if !__has_feature(objc_arc)
- (AromaEndpoint_HttpThriftEndpoint *) httpThrift;
- (void) setHttpThrift: (AromaEndpoint_HttpThriftEndpoint *) httpThrift;
#endif
- (BOOL) httpThriftIsSet;

#if !__has_feature(objc_arc)
- (AromaEndpoint_HttpRestEndpoint *) httpRest;
- (void) setHttpRest: (AromaEndpoint_HttpRestEndpoint *) httpRest;
#endif
- (BOOL) httpRestIsSet;

@end

@interface AromaEndpoint_HealthPokeRequest : NSObject <TBase, NSCoding> {
  AromaEndpoint_uuid __applicationId;
  AromaAuthentication_ApplicationToken * __serviceToken;

  BOOL __applicationId_isset;
  BOOL __serviceToken_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=applicationId, setter=setApplicationId:) AromaEndpoint_uuid applicationId;
@property (nonatomic, retain, getter=serviceToken, setter=setServiceToken:) AromaAuthentication_ApplicationToken * serviceToken;
#endif

- (id) init;
- (id) initWithApplicationId: (AromaEndpoint_uuid) applicationId serviceToken: (AromaAuthentication_ApplicationToken *) serviceToken;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (AromaEndpoint_uuid) applicationId;
- (void) setApplicationId: (AromaEndpoint_uuid) applicationId;
#endif
- (BOOL) applicationIdIsSet;

#if !__has_feature(objc_arc)
- (AromaAuthentication_ApplicationToken *) serviceToken;
- (void) setServiceToken: (AromaAuthentication_ApplicationToken *) serviceToken;
#endif
- (BOOL) serviceTokenIsSet;

@end

@interface AromaEndpoint_HealthPokeResponse : NSObject <TBase, NSCoding> {
  NSString * __message;
  BOOL __healthy;

  BOOL __message_isset;
  BOOL __healthy_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
@property (nonatomic, getter=healthy, setter=setHealthy:) BOOL healthy;
#endif

- (id) init;
- (id) initWithMessage: (NSString *) message healthy: (BOOL) healthy;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) message;
- (void) setMessage: (NSString *) message;
#endif
- (BOOL) messageIsSet;

#if !__has_feature(objc_arc)
- (BOOL) healthy;
- (void) setHealthy: (BOOL) healthy;
#endif
- (BOOL) healthyIsSet;

@end

@protocol AromaEndpoint_ApplicationEndpoint <NSObject>
- (AromaEndpoint_HealthPokeResponse *) healthPoke: (AromaEndpoint_HealthPokeRequest *) request;  // throws AromaEndpoint_OperationFailedException, TException
@end

@interface AromaEndpoint_ApplicationEndpointClient : TBaseClient <AromaEndpoint_ApplicationEndpoint> - (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface AromaEndpoint_ApplicationEndpointProcessor : NSObject <TProcessor> {
  id <AromaEndpoint_ApplicationEndpoint> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithApplicationEndpoint: (id <AromaEndpoint_ApplicationEndpoint>) service;
- (id<AromaEndpoint_ApplicationEndpoint>) service;
@end

@interface AromaEndpoint_EndpointConstants : NSObject {
}
@end
