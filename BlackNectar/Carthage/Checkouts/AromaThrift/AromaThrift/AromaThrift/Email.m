/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"
#import "TAsyncTransport.h"
#import "TProtocolFactory.h"
#import "TBaseClient.h"

#import "Aroma.h"
#import "Authentication.h"

#import "Email.h"

@implementation AromaEmail_EmailNewApplication

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithCreator: (AromaEmail_User) creator app: (AromaEmail_Application) app appToken: (AromaEmail_ApplicationToken) appToken
{
  self = [super init];
  __creator = [creator retain_stub];
  __creator_isset = YES;
  __app = [app retain_stub];
  __app_isset = YES;
  __appToken = [appToken retain_stub];
  __appToken_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"creator"])
  {
    __creator = [[decoder decodeObjectForKey: @"creator"] retain_stub];
    __creator_isset = YES;
  }
  if ([decoder containsValueForKey: @"app"])
  {
    __app = [[decoder decodeObjectForKey: @"app"] retain_stub];
    __app_isset = YES;
  }
  if ([decoder containsValueForKey: @"appToken"])
  {
    __appToken = [[decoder decodeObjectForKey: @"appToken"] retain_stub];
    __appToken_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__creator_isset)
  {
    [encoder encodeObject: __creator forKey: @"creator"];
  }
  if (__app_isset)
  {
    [encoder encodeObject: __app forKey: @"app"];
  }
  if (__appToken_isset)
  {
    [encoder encodeObject: __appToken forKey: @"appToken"];
  }
}

- (NSUInteger) hash
{
  NSUInteger hash = 17;
  hash = (hash * 31) ^ __creator_isset ? 2654435761 : 0;
  if (__creator_isset)
  {
    hash = (hash * 31) ^ [__creator hash];
  }
  hash = (hash * 31) ^ __app_isset ? 2654435761 : 0;
  if (__app_isset)
  {
    hash = (hash * 31) ^ [__app hash];
  }
  hash = (hash * 31) ^ __appToken_isset ? 2654435761 : 0;
  if (__appToken_isset)
  {
    hash = (hash * 31) ^ [__appToken hash];
  }
  return hash;
}

- (BOOL) isEqual: (id) anObject
{
  if (self == anObject) {
    return YES;
  }
  if (![anObject isKindOfClass:[AromaEmail_EmailNewApplication class]]) {
    return NO;
  }
  AromaEmail_EmailNewApplication *other = (AromaEmail_EmailNewApplication *)anObject;
  if ((__creator_isset != other->__creator_isset) ||
      (__creator_isset && ((__creator || other->__creator) && ![__creator isEqual:other->__creator]))) {
    return NO;
  }
  if ((__app_isset != other->__app_isset) ||
      (__app_isset && ((__app || other->__app) && ![__app isEqual:other->__app]))) {
    return NO;
  }
  if ((__appToken_isset != other->__appToken_isset) ||
      (__appToken_isset && ((__appToken || other->__appToken) && ![__appToken isEqual:other->__appToken]))) {
    return NO;
  }
  return YES;
}

- (void) dealloc
{
  [__creator release_stub];
  [__app release_stub];
  [__appToken release_stub];
  [super dealloc_stub];
}

- (Aroma_User *) creator {
  return [[__creator retain_stub] autorelease_stub];
}

- (void) setCreator: (Aroma_User *) creator {
  [creator retain_stub];
  [__creator release_stub];
  __creator = creator;
  __creator_isset = YES;
}

- (BOOL) creatorIsSet {
  return __creator_isset;
}

- (void) unsetCreator {
  [__creator release_stub];
  __creator = nil;
  __creator_isset = NO;
}

- (Aroma_Application *) app {
  return [[__app retain_stub] autorelease_stub];
}

- (void) setApp: (Aroma_Application *) app {
  [app retain_stub];
  [__app release_stub];
  __app = app;
  __app_isset = YES;
}

- (BOOL) appIsSet {
  return __app_isset;
}

- (void) unsetApp {
  [__app release_stub];
  __app = nil;
  __app_isset = NO;
}

- (AromaAuthentication_ApplicationToken *) appToken {
  return [[__appToken retain_stub] autorelease_stub];
}

- (void) setAppToken: (AromaAuthentication_ApplicationToken *) appToken {
  [appToken retain_stub];
  [__appToken release_stub];
  __appToken = appToken;
  __appToken_isset = YES;
}

- (BOOL) appTokenIsSet {
  return __appToken_isset;
}

- (void) unsetAppToken {
  [__appToken release_stub];
  __appToken = nil;
  __appToken_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_STRUCT) {
          Aroma_User *fieldValue = [[Aroma_User alloc] init];
          [fieldValue read: inProtocol];
          [self setCreator: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_STRUCT) {
          Aroma_Application *fieldValue = [[Aroma_Application alloc] init];
          [fieldValue read: inProtocol];
          [self setApp: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 3:
        if (fieldType == TType_STRUCT) {
          AromaAuthentication_ApplicationToken *fieldValue = [[AromaAuthentication_ApplicationToken alloc] init];
          [fieldValue read: inProtocol];
          [self setAppToken: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"EmailNewApplication"];
  if (__creator_isset) {
    if (__creator != nil) {
      [outProtocol writeFieldBeginWithName: @"creator" type: TType_STRUCT fieldID: 1];
      [__creator write: outProtocol];
      [outProtocol writeFieldEnd];
    }
  }
  if (__app_isset) {
    if (__app != nil) {
      [outProtocol writeFieldBeginWithName: @"app" type: TType_STRUCT fieldID: 2];
      [__app write: outProtocol];
      [outProtocol writeFieldEnd];
    }
  }
  if (__appToken_isset) {
    if (__appToken != nil) {
      [outProtocol writeFieldBeginWithName: @"appToken" type: TType_STRUCT fieldID: 3];
      [__appToken write: outProtocol];
      [outProtocol writeFieldEnd];
    }
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (void) validate {
  // check for required fields
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"AromaEmail_EmailNewApplication("];
  [ms appendString: @"creator:"];
  [ms appendFormat: @"%@", __creator];
  [ms appendString: @",app:"];
  [ms appendFormat: @"%@", __app];
  [ms appendString: @",appToken:"];
  [ms appendFormat: @"%@", __appToken];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end

@implementation AromaEmail_EmailNewUserRegistration

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithInfoOfNewUser: (AromaEmail_User) infoOfNewUser
{
  self = [super init];
  __infoOfNewUser = [infoOfNewUser retain_stub];
  __infoOfNewUser_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"infoOfNewUser"])
  {
    __infoOfNewUser = [[decoder decodeObjectForKey: @"infoOfNewUser"] retain_stub];
    __infoOfNewUser_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__infoOfNewUser_isset)
  {
    [encoder encodeObject: __infoOfNewUser forKey: @"infoOfNewUser"];
  }
}

- (NSUInteger) hash
{
  NSUInteger hash = 17;
  hash = (hash * 31) ^ __infoOfNewUser_isset ? 2654435761 : 0;
  if (__infoOfNewUser_isset)
  {
    hash = (hash * 31) ^ [__infoOfNewUser hash];
  }
  return hash;
}

- (BOOL) isEqual: (id) anObject
{
  if (self == anObject) {
    return YES;
  }
  if (![anObject isKindOfClass:[AromaEmail_EmailNewUserRegistration class]]) {
    return NO;
  }
  AromaEmail_EmailNewUserRegistration *other = (AromaEmail_EmailNewUserRegistration *)anObject;
  if ((__infoOfNewUser_isset != other->__infoOfNewUser_isset) ||
      (__infoOfNewUser_isset && ((__infoOfNewUser || other->__infoOfNewUser) && ![__infoOfNewUser isEqual:other->__infoOfNewUser]))) {
    return NO;
  }
  return YES;
}

- (void) dealloc
{
  [__infoOfNewUser release_stub];
  [super dealloc_stub];
}

- (Aroma_User *) infoOfNewUser {
  return [[__infoOfNewUser retain_stub] autorelease_stub];
}

- (void) setInfoOfNewUser: (Aroma_User *) infoOfNewUser {
  [infoOfNewUser retain_stub];
  [__infoOfNewUser release_stub];
  __infoOfNewUser = infoOfNewUser;
  __infoOfNewUser_isset = YES;
}

- (BOOL) infoOfNewUserIsSet {
  return __infoOfNewUser_isset;
}

- (void) unsetInfoOfNewUser {
  [__infoOfNewUser release_stub];
  __infoOfNewUser = nil;
  __infoOfNewUser_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_STRUCT) {
          Aroma_User *fieldValue = [[Aroma_User alloc] init];
          [fieldValue read: inProtocol];
          [self setInfoOfNewUser: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"EmailNewUserRegistration"];
  if (__infoOfNewUser_isset) {
    if (__infoOfNewUser != nil) {
      [outProtocol writeFieldBeginWithName: @"infoOfNewUser" type: TType_STRUCT fieldID: 1];
      [__infoOfNewUser write: outProtocol];
      [outProtocol writeFieldEnd];
    }
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (void) validate {
  // check for required fields
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"AromaEmail_EmailNewUserRegistration("];
  [ms appendString: @"infoOfNewUser:"];
  [ms appendFormat: @"%@", __infoOfNewUser];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end

@implementation AromaEmail_EmailMessage

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithNewApp: (AromaEmail_EmailNewApplication *) newApp newUser: (AromaEmail_EmailNewUserRegistration *) newUser
{
  self = [super init];
  __newApp = [newApp retain_stub];
  __newApp_isset = YES;
  __newUser = [newUser retain_stub];
  __newUser_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"newApp"])
  {
    __newApp = [[decoder decodeObjectForKey: @"newApp"] retain_stub];
    __newApp_isset = YES;
  }
  if ([decoder containsValueForKey: @"newUser"])
  {
    __newUser = [[decoder decodeObjectForKey: @"newUser"] retain_stub];
    __newUser_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__newApp_isset)
  {
    [encoder encodeObject: __newApp forKey: @"newApp"];
  }
  if (__newUser_isset)
  {
    [encoder encodeObject: __newUser forKey: @"newUser"];
  }
}

- (NSUInteger) hash
{
  NSUInteger hash = 17;
  hash = (hash * 31) ^ __newApp_isset ? 2654435761 : 0;
  if (__newApp_isset)
  {
    hash = (hash * 31) ^ [__newApp hash];
  }
  hash = (hash * 31) ^ __newUser_isset ? 2654435761 : 0;
  if (__newUser_isset)
  {
    hash = (hash * 31) ^ [__newUser hash];
  }
  return hash;
}

- (BOOL) isEqual: (id) anObject
{
  if (self == anObject) {
    return YES;
  }
  if (![anObject isKindOfClass:[AromaEmail_EmailMessage class]]) {
    return NO;
  }
  AromaEmail_EmailMessage *other = (AromaEmail_EmailMessage *)anObject;
  if ((__newApp_isset != other->__newApp_isset) ||
      (__newApp_isset && ((__newApp || other->__newApp) && ![__newApp isEqual:other->__newApp]))) {
    return NO;
  }
  if ((__newUser_isset != other->__newUser_isset) ||
      (__newUser_isset && ((__newUser || other->__newUser) && ![__newUser isEqual:other->__newUser]))) {
    return NO;
  }
  return YES;
}

- (void) dealloc
{
  [__newApp release_stub];
  [__newUser release_stub];
  [super dealloc_stub];
}

- (AromaEmail_EmailNewApplication *) newApp {
  return [[__newApp retain_stub] autorelease_stub];
}

- (void) setNewApp: (AromaEmail_EmailNewApplication *) newApp {
  [newApp retain_stub];
  [__newApp release_stub];
  __newApp = newApp;
  __newApp_isset = YES;
}

- (BOOL) newAppIsSet {
  return __newApp_isset;
}

- (void) unsetNewApp {
  [__newApp release_stub];
  __newApp = nil;
  __newApp_isset = NO;
}

- (AromaEmail_EmailNewUserRegistration *) newUser {
  return [[__newUser retain_stub] autorelease_stub];
}

- (void) setNewUser: (AromaEmail_EmailNewUserRegistration *) newUser {
  [newUser retain_stub];
  [__newUser release_stub];
  __newUser = newUser;
  __newUser_isset = YES;
}

- (BOOL) newUserIsSet {
  return __newUser_isset;
}

- (void) unsetNewUser {
  [__newUser release_stub];
  __newUser = nil;
  __newUser_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_STRUCT) {
          AromaEmail_EmailNewApplication *fieldValue = [[AromaEmail_EmailNewApplication alloc] init];
          [fieldValue read: inProtocol];
          [self setNewApp: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      case 2:
        if (fieldType == TType_STRUCT) {
          AromaEmail_EmailNewUserRegistration *fieldValue = [[AromaEmail_EmailNewUserRegistration alloc] init];
          [fieldValue read: inProtocol];
          [self setNewUser: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"EmailMessage"];
  if (__newApp_isset) {
    if (__newApp != nil) {
      [outProtocol writeFieldBeginWithName: @"newApp" type: TType_STRUCT fieldID: 1];
      [__newApp write: outProtocol];
      [outProtocol writeFieldEnd];
    }
  }
  if (__newUser_isset) {
    if (__newUser != nil) {
      [outProtocol writeFieldBeginWithName: @"newUser" type: TType_STRUCT fieldID: 2];
      [__newUser write: outProtocol];
      [outProtocol writeFieldEnd];
    }
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (void) validate {
  // check for required fields
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"AromaEmail_EmailMessage("];
  [ms appendString: @"newApp:"];
  [ms appendFormat: @"%@", __newApp];
  [ms appendString: @",newUser:"];
  [ms appendFormat: @"%@", __newUser];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end


@implementation AromaEmail_EmailConstants
+ (void) initialize {
}
@end

